{"ast":null,"code":"import { MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/tag.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/legacy-core\";\nimport * as i4 from \"@angular/material/legacy-form-field\";\nimport * as i5 from \"@angular/material/legacy-select\";\nfunction AddTagToProductComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tag_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r1.name, \" \");\n  }\n}\nexport let AddTagToProductComponent = /*#__PURE__*/(() => {\n  class AddTagToProductComponent {\n    constructor(tagService, data) {\n      this.tagService = tagService;\n      this.data = data;\n    }\n    ngOnInit() {\n      this.tagService.findAllTags().subscribe(tags => {\n        this.tags = tags;\n        this.tagService.findTagsForProduct(this.data.idProduct).subscribe(filterTags => {\n          this.filterTags = filterTags;\n          this.filterTags.forEach(t => {\n            this.tags = this.tags.filter(item => item.id !== t.id);\n          });\n        });\n      });\n    }\n    selectedValue(event) {\n      const idTag = event.value;\n      this.tagService.addTagToProduct(this.data.idProduct, idTag).subscribe(() => {\n        window.location.reload();\n      });\n    }\n  }\n  AddTagToProductComponent.ɵfac = function AddTagToProductComponent_Factory(t) {\n    return new (t || AddTagToProductComponent)(i0.ɵɵdirectiveInject(i1.TagService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  AddTagToProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTagToProductComponent,\n    selectors: [[\"app-add-tag-to-product\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"card\", 2, \"width\", \"18rem\"], [1, \"card-body\"], [\"appearance\", \"fill\"], [3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function AddTagToProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Choose a tags\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-select\", 3);\n        i0.ɵɵlistener(\"selectionChange\", function AddTagToProductComponent_Template_mat_select_selectionChange_5_listener($event) {\n          return ctx.selectedValue($event);\n        });\n        i0.ɵɵtemplate(6, AddTagToProductComponent_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.MatLegacyOption, i4.MatLegacyFormField, i4.MatLegacyLabel, i5.MatLegacySelect]\n  });\n  return AddTagToProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}